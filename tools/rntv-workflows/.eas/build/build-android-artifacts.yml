build:
  name: Build Android artifacts for a release
  steps:
    - eas/checkout
    - eas/install_node_modules
    - run:
        name: Patch @microsoft/api-extractor
        working_directory: ../..
        command: |
          patch -p1 < ./tools/rntv-workflows/microsoft-api-extractor.patch
    - run:
        name: Set up build-specific environment
        working_directory: ../..
        command: |
          # Set up environment for subsequent steps
          # Check and save sdkmanager path
          export ANDROID_CUSTOM_SDKMANAGER_PATH=`which sdkmanager`
          echo "ANDROID_CUSTOM_SDKMANAGER_PATH: $ANDROID_CUSTOM_SDKMANAGER_PATH"
          set-env ANDROID_CUSTOM_SDKMANAGER_PATH $ANDROID_CUSTOM_SDKMANAGER_PATH
          # Location for NPM tarballs
          export NPM_TARBALL_LOCATION=$PWD/npm-tarballs
          mkdir -p $NPM_TARBALL_LOCATION
          set-env NPM_TARBALL_LOCATION $NPM_TARBALL_LOCATION
          # Location for RNTester APKs
          export RNTESTER_APK_LOCATION=$PWD/RNTester-Android
          mkdir -p $RNTESTER_APK_LOCATION/Debug
          mkdir -p $RNTESTER_APK_LOCATION/Release
          set-env RNTESTER_APK_LOCATION $RNTESTER_APK_LOCATION
          # Root directory
          export ROOT_DIR=$PWD
          set-env ROOT_DIR $ROOT_DIR
          # Hermes V1
          set-env RCT_HERMES_V1_ENABLED 1
    - run:
        name: Download hermesc from core release package
        command: |
          npx tsx ./src/download-hermesc.ts
    - run:
        name: Copy and modify publish.gradle
        working_directory: ../..
        command: |
          export MAVEN_TEMP_LOCAL_PATH=$PWD/maven-local
          export MAVEN_TEMP_LOCAL_URL=file://$MAVEN_TEMP_LOCAL_PATH
          cp ./tools/rntv-workflows/publish.gradle ./packages/react-native/ReactAndroid/publish.gradle
          if [[ "$EAS_BUILD_PLATFORM" == "ios" || "$EAS_BUILD_RUNNER" != "eas-build" ]]; then
            sed -i '' "s|MAVEN_TEMP_LOCAL_URL|\'$MAVEN_TEMP_LOCAL_URL\'|g;" ./packages/react-native/ReactAndroid/publish.gradle
            sed -i '' 's/IS_SNAPSHOT/false/g' ./packages/react-native/ReactAndroid/publish.gradle
          else
            sed -i "s|MAVEN_TEMP_LOCAL_URL|\'$MAVEN_TEMP_LOCAL_URL\'|g;" ./packages/react-native/ReactAndroid/publish.gradle
            sed -i 's/IS_SNAPSHOT/false/g' ./packages/react-native/ReactAndroid/publish.gradle
          fi
          # Set up environment for subsequent steps
          set-env MAVEN_TEMP_LOCAL_PATH $MAVEN_TEMP_LOCAL_PATH
          set-env MAVEN_TEMP_LOCAL_URL $MAVEN_TEMP_LOCAL_URL
          echo "MAVEN_TEMP_LOCAL_URL=$MAVEN_TEMP_LOCAL_URL"
    - run:
        name: Build Android and Android TV artifacts
        working_directory: ../..
        command: |
          ./gradlew publishAllToMavenTempLocal
    - run:
        name: Run Typescript generation
        working_directory: ../..
        command: |
          if [[ "$RNTV_RELEASE_BUILD" != "1" ]]; then
            yarn build-types
          fi
    - run:
        name: Create virtualized-lists tarball
        working_directory: ../../packages/virtualized-lists
        command: |
          npm pack --pack-destination $ROOT_DIR
    - run:
        name: Create react-native tarball
        working_directory: ../../packages/react-native
        command: |
          npm pack --pack-destination $ROOT_DIR
    - run:
        name: Build RNTester app for Android and Android TV (Debug)
        working_directory: ../../packages/rn-tester
        command: |
          echo "Building RNTester..."
          yarn build-android-hermes
          echo "Copying RNTester APKs to $RNTESTER_APK_LOCATION..."
          cp -r android/app/build/outputs/apk/debug/* $RNTESTER_APK_LOCATION/Debug
          echo "Build completed."
    - run:
        name: Build RNTester app for Android and Android TV (Release)
        working_directory: ../../packages/rn-tester
        command: |
          echo "Building RNTester..."
          yarn build-android-hermes-release
          echo "Copying RNTester APKs to $RNTESTER_APK_LOCATION..."
          cp -r android/app/build/outputs/apk/release/* $RNTESTER_APK_LOCATION/Release
          echo "Build completed."
    - run:
        name: Package Android artifacts
        working_directory: ../..
        command: |
          export REACT_NATIVE_VERSION=`npx tsx tools/rntv-workflows/src/get-react-native-version.ts`
          echo "REACT_NATIVE_VERSION: $REACT_NATIVE_VERSION"
          (cd RNTester-Android/Debug; tar zcf $ROOT_DIR/rntester-$REACT_NATIVE_VERSION-androidtv-debug.tgz *)
          (cd RNTester-Android/Release; tar zcf $ROOT_DIR/rntester-$REACT_NATIVE_VERSION-androidtv-release.tgz *)
          (cd maven-local; tar zcf $ROOT_DIR/react-android-hermes-$REACT_NATIVE_VERSION.tgz *)
    - run:
        name: Send Android artifacts to Sonatype
        working_directory: ../..
        command: |
          export REACT_NATIVE_VERSION=`npx tsx tools/rntv-workflows/src/get-react-native-version.ts`
          if [[ "$RNTV_RELEASE_BUILD" == "1" ]]; then
            npx tsx tools/rntv-workflows/src/sonatype.ts upload $ROOT_DIR/react-android-hermes-$REACT_NATIVE_VERSION.tgz
          else
            echo "Skipping upload to Sonatype because this is not a release build."
          fi
    - eas/upload_artifact:
        name: Upload Android artifacts and NPM tarballs
        inputs:
          type: build-artifact
          path: |
            react-android-hermes-*.tgz
            rntester-*.tgz
            react-native-*.tgz
